
#Configure Hibernate in Spring to automatically generate a MySQL schema:
#***********************************************************************

spring.jpa.hibernate.ddl-auto=create

spring.datasource.url=jdbc:mysql://${DATABASE_URL}/${DATABASE_SCHEMA}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

#better error messages:
#**********************
spring.jpa.show-sql=true

#Google Identity Platform:
#**************************************************
#Only client-id and client-secret are needed
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_OAUTH2_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_OAUTH2_CLIENT_SECRET}
#Set up resource server to allow authentication by JWT tokens
#spring.security.oauth2.resourceserver.jwt.issuer-uri=https://accounts.google.com
#spring.security.oauth2.resourceserver.opaquetoken.introspection-uri
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs

#Hikari settings:
#****************
#spring.datasource.hikari.maxLifetime property must be lower than the database's wait_timeout
#1 minutes wait time:
spring.datasource.hikari.maxLifeTime : 60000
spring.datasource.hikari.connection-test-query=SELECT 1 FROM DUAL
#spring.datasource.hikari.connection-timeout=600000
spring.datasource.hikari.maximum-pool-size=20
#spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.minimum-idle=4
spring.datasource.hikari.validation-timeout=3000
spring.datasource.hikari.idle-timeout=30000